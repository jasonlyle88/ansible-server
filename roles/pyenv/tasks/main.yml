---
-   name: Install PyEnv
    become: true
    community.general.pacman:
        executable: pacman
        state: present
        reason: explicit
        reason_for: all
        name: pyenv

-   name: Install PyEnv Python build dependencies
    become: true
    community.general.pacman:
        executable: pacman
        state: present
        reason: dependency
        reason_for: new
        name:
            - base-devel
            - openssl
            - zlib
            - xz
            - tk
            - jdk
            - ant

-   name: Install PyEnv Update (Plugin)
    ansible.builtin.git:
        repo: https://github.com/pyenv/pyenv-update.git
        update: no
        dest: "{{ lookup('env', 'PYENV_ROOT', default=ansible_env.HOME + '/.pyenv') }}/plugins/pyenv-update"

-   name: Install PyEnv Doctor (Plugin)
    ansible.builtin.git:
        repo: https://github.com/pyenv/pyenv-doctor.git
        update: no
        dest: "{{ lookup('env', 'PYENV_ROOT', default=ansible_env.HOME + '/.pyenv') }}/plugins/pyenv-doctor"

-   name: Install PyEnv Users (Plugin)
    ansible.builtin.git:
        repo: https://github.com/pyenv/pyenv-users.git
        update: no
        dest: "{{ lookup('env', 'PYENV_ROOT', default=ansible_env.HOME + '/.pyenv') }}/plugins/pyenv-users"

-   name: Install PyEnv VirtualEnv (Plugin)
    ansible.builtin.git:
        repo: https://github.com/pyenv/pyenv-virtualenv.git
        update: no
        dest: "{{ lookup('env', 'PYENV_ROOT', default=ansible_env.HOME + '/.pyenv') }}/plugins/pyenv-virtualenv"

-   name: Run PyEnv Doctor
    ansible.builtin.shell: 'pyenv doctor -a'
    register: pyenv_version_install
    changed_when: pyenv_version_install.rc | int < 0
    failed_when: pyenv_version_install.rc | int > 0

-   name: Install Python versions
    with_items: "{{ pyenv.python_versions }}"
    ansible.builtin.script: install_pyenv_python_version.bash -v "{{ item }}"
    register: pyenv_version_install
    changed_when: pyenv_version_install.rc | int == 0
    failed_when: pyenv_version_install.rc | int >= 2
    when: pyenv.python_versions is not none and (pyenv.python_versions | default([]) | length) > 0

-   name: Set global Python version
    ansible.builtin.script: set_pyenv_python_global_version.bash -v "{{ pyenv.python_global_version }}"
    register: pyenv_set_global_version
    changed_when: pyenv_set_global_version.rc | int == 0
    failed_when: pyenv_set_global_version.rc | int >= 2
